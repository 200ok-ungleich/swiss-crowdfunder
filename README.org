* README

[[https://gitlab.com/200ok/crowdfunding/badges/master/pipeline.svg]]

** Setup

*** Install RBenv

macOS: =brew install rbenv=

*** Install Ruby version 2.4.1

macOS: =rbenv install 2.4.1=

*** Install bundler

=gem install bundler=

*** Clone the repository

*** Install dependencies

Within your local checkout run =bundle=.

*** Migrate Database

=rake db:create db:migrate db:seed=

** Development
*** Start Application

=rails s=

*** Run tests

Automatically run tests while development

#+BEGIN_SRC sh
guard
#+END_SRC

For Emacs Users: When using `enh-ruby-mode`, this will also
automatically color your status bar either green on success or red on error.

*** Live Reload

Using the Gems =guard-livereload= and =rack-livereload=, development
and saving of =*.erb= files will reload your browser. Developing
=*.scss= files will also hot-load the respective CSS within the
browser.

** Deployment

*** Premise

- You need to have the ssh-agent running, for example under Debian =eval
`ssh-agent -s`=.

- Your ssh identities need to be added to the ssh-agent: =ssh-add=


*** Deploy

We are using =capistrano= to deploy the newest version, roll back,
compile assets and restart the app container.

Deploy the newest version of =master=: =cap production deploy=

Optionally you can locally set a local ENV variable =REVISION= to set
a different branch than =master= for deployment.


*** Delete DB in Production

#+BEGIN_SRC

unicorn_wrapper stop
DISABLE_DATABASE_ENVIRONMENT_CHECK=1 rake db:drop db:create db:migrate db:seed

#+END_SRC

** Documentation

*** Security

    For the initial version of the application, there is only one route
that can create entities, none that can update or destroy any.
Creation of the resource only works on a valid model and has only the
potential side effect of generating more money for the campaign. Apart
from a brute force attempt of creating bogus data, there's little
security risk involved.

Also, there's no concept of a logged-in user, yet. Therefore, there is
no global lock-down needed/possible. The =cancancan= and =device= gems
are in place, though, for authorization and authentication as soon as
supporters get the ability to create/modify/destroy any other data or
have the ability to log in.

** TODOs

*** PROJECT Ready for Ungleich Crowdfunding
    SCHEDULED: <2017-10-17 Tue> DEADLINE: <2017-10-27 Fri>


**** TODO Handle 404s
**** TODO Text Feld auf Order: Bank Einzug
**** TODO Address: Street, #, ZIP, City, Country
**** TODO Campaign Model: E-Mail
**** TODO Send Email on Order#create
**** TODO On create order/user: Send Mail
**** TODO On create order/user: Send Notification to Mattermost
**** TODO GA Integration
**** TODO NF: SEO friendly URLs for Campaigns
**** TODO Add ExceptionNotification E-Mails
**** TODO [50%] Redirect root to Nicos campaign
     - [X] Actual redirect
     - [ ] Feature Specs

**** TODO As a user, when checking out a goodie, I want to be able to pay with my bank account
- Gleicher FLow wie jetzt
- Anstelle CC Form: Bank-Einzugs Info
**** TODO Camgains#show/Goodies#index: Show original and remaining quantity
**** WAITING [66%] NF: Nico should confirm

- [ ] Test itinerary
- [X] cdist run
- [X] SSL

**** DONE campaigns#show: I18n supporters
**** DONE Regression: Progress bar doesn't work
**** DONE As a user, when ordering, I need to give my email address
**** DONE NF: Capistrano Bug - Migrations run on every deploy
**** DONE Campaign Model: Introduce optional FB and Twitter Links
**** DONE NF: Eval - Users as Nested Attributes through Orders
**** DONE [100%] NF: Integrate FactoryGirl
- [X] spec/features/admin_spec.rb
- [X] spec/features/campaigns_spec.rb
- [X] spec/features/application_spec.rb
- [X] spec/features/root_spec.rb
- [X] spec/models/supporter_spec.rb
- [X] spec/models/campaign_spec.rb
- [X] spec/controllers/orders_controller_spec.rb
- [X] spec/controllers/root_controller_spec.rb

**** DONE As a user, when checking out a goodie, I want to give user-info: Name, E-Mail, Date of Birth (>=18)
- [ ] Validation

**** DONE NF: Global Lock-Down
**** DONE Remove icons from Goodies
**** DONE NF: Introduce capistrano for deployment by everyone
**** DONE Introduce "About Us" Page without content
**** DONE Introduce "TOS" Page without content


*** PROJECT Production Ready

**** TODO Implement Stripe
**** TODO Integrate Favicon
**** TODO Replace application.html.erb fonts and font-awesome CDN with local variant
**** TODO i18n all the strings
**** TODO As soon as users can create/modify/delete resources or login: Implement global lock-down
- See [[Security]] for more information
**** PROJECT Secret Keys

- [ ]  More secret creation of Admin User than through =db/seeds.rb=
- [ ]  More secret devise keys than in =config/devise.rb=
- [X] Do not expose =SECRET_KEY_BASE= in this README

**** TODO Add CanCanCan and lock down the /whole/ application
**** DONE Reconfigure GA link to the proper URL
